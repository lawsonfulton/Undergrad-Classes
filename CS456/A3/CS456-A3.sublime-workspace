{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"print",
				"printRIB()	void"
			],
			[
				"getA",
				"getCostForAdjacent(int router1, int router2)	int"
			],
			[
				"NB",
				"NBR_ROUTER	macro"
			],
			[
				"rout",
				"routerConnectedToLink(int router, int link)	bool"
			],
			[
				"link",
				"link_cost	struct"
			],
			[
				"ro",
				"router1	int"
			],
			[
				"router",
				"routerId	int"
			],
			[
				"rou",
				"router1DB	circuit_DB"
			],
			[
				"router1",
				"router1DB	circuit_DB"
			],
			[
				"ne",
				"newPDU	struct pkt_LSPDU"
			],
			[
				"r",
				"router_id	unsigned int"
			],
			[
				"H",
				"HELLO"
			],
			[
				"pk",
				"pkt_LSPDU	struct"
			],
			[
				"pkt",
				"pkt_LSPDU	struct"
			],
			[
				"c",
				"c_str() const	const_pointer"
			],
			[
				"net",
				"networkDB	std::map<int, circuit_DB>"
			],
			[
				"init",
				"pkt_INIT"
			],
			[
				"emu",
				"emuSock	int"
			],
			[
				"pkt_",
				"pkt_INIT	struct"
			],
			[
				"em",
				"emuPort	const char *"
			],
			[
				"send",
				"send(int, const void *, size_t, int)	ssize_t"
			],
			[
				"arg",
				"argv	char const *[]"
			],
			[
				"Inc",
				"IncomingSocketManager	class"
			],
			[
				"getAr",
				"getArgDataType(int argType)	int"
			],
			[
				"size",
				"sizeOfArg(int argType)	int"
			],
			[
				"argTe",
				"argTypes	int *"
			],
			[
				"msg",
				"msgData	char*"
			],
			[
				"serial",
				"serializeArgs(char *destData, int index)	int"
			],
			[
				"in",
				"index	int"
			],
			[
				"get",
				"getArgArrayLength(int argType)	int"
			],
			[
				"ARG_",
				"ARG_OUTPUT	macro"
			],
			[
				"EX",
				"EXECUTE_FAILURE	MessageType"
			],
			[
				"Mes",
				"Messenger"
			],
			[
				"po",
				"portBuf"
			],
			[
				"connectTo",
				"connectTo(const char *address, const char *port)	int"
			],
			[
				"Out",
				"OutgoingSocketManager::connectTo"
			],
			[
				"MESSAG",
				"MessageType"
			],
			[
				"bin",
				"binderPort"
			],
			[
				"bind",
				"binderAddress"
			],
			[
				"look",
				"lookupBinder"
			],
			[
				"loo",
				"lookupServerInfo"
			],
			[
				"TER",
				"TERMINATE"
			],
			[
				"L",
				"LOC_SUCCESS"
			],
			[
				"Mess",
				"Messenger"
			],
			[
				"BIND",
				"BINDER_FUNCTION_NOT_FOUND"
			],
			[
				"ar",
				"argTypes	int *"
			],
			[
				"e",
				"else"
			],
			[
				"LO",
				"LOC_FAILURE"
			],
			[
				"MEss",
				"Messenger"
			],
			[
				"MyExc",
				"MyExceptions"
			],
			[
				"fi",
				"first"
			],
			[
				"data",
				"database"
			],
			[
				"conn",
				"connection"
			],
			[
				"connetion",
				"connections"
			],
			[
				"termin",
				"terminateServers()	void"
			],
			[
				"Server",
				"ServerInfo"
			],
			[
				"Binde",
				"Binder::handleServerConnection"
			],
			[
				"prin",
				"printException(int e)	int"
			],
			[
				"Bind",
				"Binder::handleServerConnection"
			],
			[
				"res",
				"response"
			],
			[
				"REG",
				"REGISTER_SUCCESS"
			],
			[
				"regi",
				"registerServerFunction"
			],
			[
				"UN",
				"UNEXPECTED_MESSAGE_ERROR"
			],
			[
				"pu",
				"push_back"
			],
			[
				"handleS",
				"handleServerConnection(Message *msg, int socket)	void"
			],
			[
				"inc",
				"incomingSocket"
			],
			[
				"start",
				"startServerThread"
			],
			[
				"socket",
				"socket"
			],
			[
				"RE",
				"REGISTER_SUCCESS"
			],
			[
				"de",
				"delete"
			],
			[
				"lis",
				"listeningSocket"
			],
			[
				"argT",
				"argTypes	int*"
			],
			[
				"Ser",
				"ServerInfo"
			],
			[
				"Serv",
				"ServerInfo"
			],
			[
				"nor",
				"normalizeArrayLength"
			],
			[
				"a",
				"argTypesLength	int"
			],
			[
				"args",
				"argTypesLength"
			],
			[
				"cal",
				"calcArgsLength()	void"
			],
			[
				"por",
				"port"
			],
			[
				"RECE",
				"RECEIVE_HEADER_ERROR"
			],
			[
				"byte",
				"bytes	int"
			],
			[
				"per",
				"perror(\"gethostname"
			],
			[
				"SOC",
				"SOCKET_ERROR"
			],
			[
				"U",
				"UNKNOWN_HOST_ERROR"
			],
			[
				"sock",
				"sock_fd"
			],
			[
				"serv",
				"server_address"
			],
			[
				"incom",
				"incomingSocket"
			],
			[
				"REC",
				"RECEIVE_BODY_ERROR"
			],
			[
				"rec",
				"receivedBytes	int"
			],
			[
				"In",
				"IncomingSocketManager::printSocketInfo"
			],
			[
				"star",
				"startListening"
			],
			[
				"crea",
				"createListeningSocket()	int"
			],
			[
				"Con",
				"CONNECTION_ERROR"
			],
			[
				"pri",
				"private"
			],
			[
				"M",
				"MY_EXCEPTION"
			],
			[
				"ser",
				"serverPort"
			],
			[
				"add",
				"address"
			],
			[
				"getS",
				"getServerAddress"
			],
			[
				"OU",
				"OutgoingSocketManager"
			],
			[
				"rpc",
				"rpcRegister(char *name, int *argTypes, skeleton f)	int"
			],
			[
				"rp",
				"rpcInit"
			],
			[
				"RPC",
				"RPCServer"
			],
			[
				"cli",
				"client1"
			],
			[
				"BIN",
				"BINDER_OBJS"
			],
			[
				"LI",
				"LIBRPCOBJS"
			],
			[
				"LIB",
				"LIBRPCSRCS"
			],
			[
				"ha",
				"handle_error(msg)	macro"
			],
			[
				"ms",
				"msgData	char *"
			],
			[
				"Messe",
				"Messenger::receiveMessage"
			],
			[
				"rece",
				"receiveMessage"
			],
			[
				"so",
				"socketfd"
			],
			[
				"NULL",
				"NULL	macro"
			],
			[
				"len",
				"length"
			],
			[
				"initVa",
				"initVars()	void"
			],
			[
				"new",
				"newMsg"
			],
			[
				"xxy",
				"xxyx"
			],
			[
				"list",
				"listeningSocket"
			],
			[
				"std",
				"std=c++0x"
			],
			[
				"he",
				"helperFcns"
			],
			[
				"l",
				"length"
			],
			[
				"re",
				"return"
			],
			[
				"rea",
				"reasonCode"
			],
			[
				"read",
				"reasonCode"
			],
			[
				"seria",
				"serialize"
			],
			[
				"str",
				"strlen"
			],
			[
				"se",
				"serverIdentifier"
			],
			[
				"E",
				"ExecuteMessage"
			],
			[
				"R",
				"RegisterMessage"
			]
		]
	},
	"buffers":
	[
		{
			"file": "router.cpp",
			"settings":
			{
				"buffer_size": 12327,
				"line_ending": "Unix"
			}
		},
		{
			"file": "README",
			"settings":
			{
				"buffer_size": 586,
				"line_ending": "Unix",
				"name": "./start.sh ubuntu1204-004 7632 7633"
			}
		},
		{
			"file": "OutgoingSocketManager.cpp",
			"settings":
			{
				"buffer_size": 1096,
				"line_ending": "Windows"
			}
		},
		{
			"file": "MyExceptions.h",
			"settings":
			{
				"buffer_size": 646,
				"line_ending": "Unix"
			}
		},
		{
			"file": "structs.h",
			"settings":
			{
				"buffer_size": 942,
				"line_ending": "Unix"
			}
		},
		{
			"file": "IncomingSocketManager.cpp",
			"settings":
			{
				"buffer_size": 1811,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Messenger.cpp",
			"settings":
			{
				"buffer_size": 2096,
				"line_ending": "Unix"
			}
		},
		{
			"file": "OutgoingSocketManager.h",
			"settings":
			{
				"buffer_size": 350,
				"line_ending": "Windows"
			}
		},
		{
			"file": "IncomingSocketManager.h",
			"settings":
			{
				"buffer_size": 430,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"command_palette":
	{
		"height": 347.0,
		"selected_items":
		[
			[
				"clang",
				"Set Syntax: SublimeClangErrorPanel"
			],
			[
				"clan",
				"Set Syntax: SublimeClangErrorPanel"
			],
			[
				"pack",
				"Package Control: Disable Package"
			],
			[
				"package",
				"PackageResourceViewer: Extract Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Pac",
				"Package Control: Install Package"
			],
			[
				"Pack",
				"Package Control: Install Package"
			],
			[
				"",
				"About"
			]
		],
		"width": 501.0
	},
	"console":
	{
		"height": 120.0,
		"history":
		[
			"\\",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/lawson/Workspace/CS456/A3/makefile",
		"/Users/lawson/Workspace/CS456/A3/start.sh",
		"/Users/lawson/Google Drive/Taxes April 2014/rent reciepts  Aug - Dec.txt",
		"/Users/lawson/Workspace/CS456/A3/README",
		"/Users/lawson/Workspace/CS456/A3/router",
		"/Users/lawson/Library/Application Support/Sublime Text 3/Packages/C++/fout.sublime-snippet",
		"/Users/lawson/Workspace/CS456/A3/IncomingSocketManager.cpp",
		"/Users/lawson/Workspace/CS456/A3/nse-linux386",
		"/Users/lawson/Workspace/CS456/A3/MyExceptions.h",
		"/Users/lawson/Library/Application Support/Sublime Text 3/Packages/User/C.sublime-build",
		"/Users/lawson/Workspace/CS456/A2/sender.java",
		"/Users/lawson/Downloads/Binder.cpp",
		"/Users/lawson/Downloads/Database.h",
		"/Users/lawson/Workspace/CS454/A3/RPCServer.cpp",
		"/Users/lawson/Workspace/CS454/A3/rpc.h",
		"/Users/lawson/Workspace/CS454/A3/rpc.cpp",
		"/Users/lawson/Workspace/CS454/A3/Message.h",
		"/Users/lawson/Workspace/CS454/A3/Message.cpp",
		"/Users/lawson/Workspace/CS454/A3/client1.c",
		"/Users/lawson/Workspace/CS454/A3/server.c",
		"/Users/lawson/Workspace/CS454/A3/Binder.cpp",
		"/Users/lawson/Workspace/CS454/A3/Database.h",
		"/Users/lawson/Workspace/CS454/A3/TODO.txt",
		"/Users/lawson/Workspace/CS454/A3/messageTests",
		"/Users/lawson/Workspace/CS454/A3/Messenger.cpp",
		"/Users/lawson/Workspace/CS454/A3/Messenger.h",
		"/Users/lawson/Workspace/CS454/A3/server_functions.h",
		"/Users/lawson/Workspace/CS454/A3/server_functions.c",
		"/Users/lawson/Workspace/CS454/A3/server",
		"/Users/lawson/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/Users/lawson/Workspace/CS454/A3/Database.cpp",
		"/Users/lawson/Workspace/CS454/A3/tests.cpp",
		"/Users/lawson/Workspace/CS454/A3/RPCServer.h",
		"/Users/lawson/Workspace/CS454/A3/Binder.h",
		"/Users/lawson/Workspace/CS454/A3/MyExceptions.h",
		"/Users/lawson/Workspace/CS454/A3/binder",
		"/Users/lawson/Workspace/CS454/A3/OutgoingSocketManager.h",
		"/Users/lawson/Workspace/CS454/A3/makefile",
		"/Users/lawson/Workspace/CS454/A3/IncomingSocketManager.h",
		"/Users/lawson/Workspace/CS454/A3/client",
		"/Users/lawson/Workspace/CS454/A3/OutgoingSocketManager.cpp",
		"/Users/lawson/Workspace/CS454/A3/Archive/client1.c",
		"/Users/lawson/Workspace/CS454/A3/client1",
		"/Users/lawson/Workspace/CS454/A3/IncomingSocketManager.cpp",
		"/Users/lawson/Workspace/CS454/A3/makefile_old",
		"/Users/lawson/Workspace/CS454/A3/A3.sublime-project",
		"/Users/lawson/Workspace/CS454/A3/BinderMain.cpp",
		"/Users/lawson/Workspace/CS454/A3/server_function_skels.c",
		"/Users/lawson/Workspace/CS454/A3/messageTests.cpp",
		"/Users/lawson/Workspace/CS454/A2/helperFcns.h",
		"/Users/lawson/Workspace/CS454/A3/rpc 2.h",
		"/Users/lawson/Workspace/CS454/A3/server_function_skels.h",
		"/Users/lawson/Workspace/CS454/A3/helperFcns.h",
		"/Users/lawson/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
		"/Users/lawson/Workspace/CS454/A3/.depend",
		"/Users/lawson/Workspace/CS454/A3/test",
		"/Users/lawson/Workspace/CS454/A3/Server.cpp",
		"/Users/lawson/Library/Application Support/Sublime Text 3/Packages/User/cout_snippet.sublime-snippet",
		"/Users/lawson/Library/Application Support/Sublime Text 3/Packages/Alignment/Base File.sublime-settings",
		"/Users/lawson/Library/Application Support/Sublime Text 3/Packages/Alignment/Default (OSX).sublime-keymap",
		"/Users/lawson/Library/Application Support/Sublime Text 3/Packages/User/Base File.sublime-settings",
		"/Users/lawson/Library/Application Support/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/Users/lawson/Workspace/CS454/A2/stringServer.cpp",
		"/Users/lawson/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/usr/include/string.h",
		"/Users/lawson/Workspace/CS454/A2/ideas.cpp",
		"/Users/lawson/Workspace/CS454/A3/Server.h",
		"/Users/lawson/Workspace/CS454/A2/stringClient.cpp",
		"/Users/lawson/Google Drive/School/CS 454/A3/makefile",
		"/Users/lawson/Google Drive/School/CS 454/A3/Server.cpp",
		"/Users/lawson/Google Drive/School/CS 454/A3/Server.h",
		"/Users/lawson/Google Drive/School/CS 454/A3/Binder.h",
		"/Users/lawson/Google Drive/School/CS 454/A3/Binder.cpp",
		"/Users/lawson/Workspace/CS454/A2/makefile",
		"/Users/lawson/Workspace/CS454/A2/SharedQueue.cpp",
		"/Users/lawson/Library/Application Support/Sublime Text 3/Packages/User/myC++.sublime-build",
		"/Users/lawson/Workspace/CS454/A2/stringServer",
		"/Users/lawson/Workspace/CS454/A2/stringClient",
		"/Users/lawson/Workspace/CS454/A2/A2.sublime-project",
		"/Users/lawson/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/lawson/Workspace/CS454/A3,*.cpp,*.h",
			"/Users/lawson/Library/Application Support/Sublime Text 3/*",
			"/Users/lawson/Workspace/CS454/A3/,*.cpp,*.h",
			"/Users/lawson/Workspace/CS454/A3/,*.cpp",
			"/Users/lawson/Workspace/CS454/A3/*.cpp",
			"/Users/lawson/Workspace/CS454/A3/*",
			"/Users/lawson/Workspace/CS454/A3"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"txt",
			"1out",
			"#>",
			"linkEndpoints",
			"topol",
			"link",
			"D[v].second",
			"i",
			"printTopology",
			"networkDB",
			"lspdu",
			"cost",
			"link",
			"->",
			"dest",
			"phello",
			"helloSize",
			"cout",
			"size",
			"case",
			"sizeof",
			"break",
			"dest",
			"seri",
			"char",
			"case",
			"^(.*)$",
			"sock_fd",
			"port",
			"addr",
			"robin",
			"req",
			"map",
			"outer_iter",
			"t2",
			"calcArgsLength",
			"server_address",
			"sockfd",
			"calcArgsLength",
			")\n",
			"sendMessage",
			"group",
			"next",
			"printSocketInfo",
			"hostname",
			"rpcInit",
			"BINDER_OBJS",
			"RPC",
			"OBJS",
			"BNDRSRCS",
			"SRCS",
			"IncomingSocketManager",
			"MessageListener",
			"MESSAGELISTENER_H",
			"MESSAGE_SENDER_H",
			"REGISTER_FAILURE",
			"REGISTER",
			"LOC_REQUEST",
			"REGISTER_SUCCESS",
			"vector",
			"*.sublime-snippet",
			"acceptConnection",
			"^(.*)$",
			"sockfd",
			"bindListeningSocket",
			"       ",
			"      ",
			"     ",
			"    ",
			"   ",
			"Binder",
			"    ",
			"tool",
			"readArgTypes",
			"readServerIdentifier",
			"char",
			"msg",
			"type",
			" :",
			"serializePort",
			"msgData",
			"data",
			"endl",
			"cout",
			"memcpy",
			"cahr",
			"data",
			"client_addr",
			"my_addr",
			"BINDER",
			"client_addr",
			"incoming_socketfd",
			"max_sd",
			"readfds",
			"addrlen",
			"incoming_socketfd",
			"new_socket",
			"addrlen",
			"master_socket",
			"opt",
			"cout",
			"incoming_socketfd",
			"msg_len",
			"buf",
			"s",
			"msg_len",
			"get_address_and_port",
			"new_fd",
			"sockfd",
			"their_addr",
			"channel",
			"sa",
			"clientInformation",
			"new_fd",
			"\");\n",
			"their_addr",
			"res",
			"socket",
			"res",
			"    \n",
			"res",
			"\n    ",
			"    /*",
			"res->"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"servinfo->"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "router.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12327,
						"regions":
						{
						},
						"selection":
						[
							[
								240,
								240
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 113.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "README",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 586,
						"regions":
						{
						},
						"selection":
						[
							[
								43,
								43
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "./start.sh ubuntu1204-004 7632 7633",
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "OutgoingSocketManager.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1096,
						"regions":
						{
						},
						"selection":
						[
							[
								130,
								130
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 0,
					"file": "router.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12327,
						"regions":
						{
						},
						"selection":
						[
							[
								117,
								117
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 6.0,
						"translation.y": 7225.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "MyExceptions.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 646,
						"regions":
						{
						},
						"selection":
						[
							[
								94,
								94
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "structs.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 942,
						"regions":
						{
						},
						"selection":
						[
							[
								38,
								38
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "IncomingSocketManager.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1811,
						"regions":
						{
						},
						"selection":
						[
							[
								81,
								81
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Messenger.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2096,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 206.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "OutgoingSocketManager.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 350,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "IncomingSocketManager.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 430,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 30.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clang":
	{
		"height": 94.0
	},
	"output.exec":
	{
		"height": 152.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "CS456-A3.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"rou",
				"router.cpp"
			],
			[
				"me",
				"Messenger.cpp"
			],
			[
				"mes",
				"Messenger.cpp"
			],
			[
				"my",
				"MyExceptions.h"
			],
			[
				"mak",
				"makefile"
			],
			[
				"rpc",
				"rpc.cpp"
			],
			[
				"cl",
				"client1.c"
			],
			[
				"m",
				"Message.cpp"
			],
			[
				"ser",
				"server.c"
			],
			[
				"to",
				"TODO.txt"
			],
			[
				"serv",
				"server_functions.c"
			],
			[
				"func",
				"server_function_skels.c"
			],
			[
				"cli",
				"client1.c"
			],
			[
				"",
				"Message.cpp"
			],
			[
				"rp",
				"rpc.h"
			],
			[
				"da",
				"Database.h"
			],
			[
				"tes",
				"tests.cpp"
			],
			[
				"bin",
				"Binder.cpp"
			],
			[
				"rpc.h",
				"rpc.h"
			],
			[
				"binde",
				"Binder.cpp"
			],
			[
				"clie",
				"client1"
			],
			[
				"ou",
				"OutgoingSocketManager.h"
			],
			[
				"d",
				"Database.cpp"
			],
			[
				"e",
				"MyExceptions.h"
			],
			[
				"r",
				"RPCServer.cpp"
			],
			[
				"i",
				"IncomingSocketManager.h"
			],
			[
				"ex",
				"MyExceptions.h"
			],
			[
				"b",
				"Binder.h"
			],
			[
				"mess",
				"Message.cpp"
			],
			[
				"tod",
				"TODO.txt"
			],
			[
				"incom",
				"IncomingSocketManager.h"
			],
			[
				"out",
				"OutgoingSocketManager.cpp"
			],
			[
				"in",
				"IncomingSocketManager.cpp"
			],
			[
				"ol",
				"makefile_old"
			],
			[
				"inco",
				"IncomingSocketManager.h"
			],
			[
				"dat",
				"Database.cpp"
			],
			[
				"make",
				"makefile"
			],
			[
				"tot",
				"TODO.txt"
			],
			[
				"hel",
				"~/Workspace/CS454/A2/helperFcns.h"
			],
			[
				"mye",
				"MyExceptions.h"
			],
			[
				"t",
				"TODO.txt"
			],
			[
				"inc",
				"IncomingSocketManager.h"
			],
			[
				"bi",
				"Binder.cpp"
			],
			[
				"ma",
				"makefile"
			],
			[
				"he",
				"helperFcns.h"
			],
			[
				"sh",
				"SharedQueue.cpp"
			],
			[
				"str",
				"stringServer.cpp"
			],
			[
				"st",
				"stringClient.cpp"
			],
			[
				"stri",
				"stringServer.cpp"
			],
			[
				"se",
				"stringServer"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/Workspace/CS456/A2/A2.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 185.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
